"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_plugins_1 = require("@expo/config-plugins");
const generateCode_1 = require("@expo/config-plugins/build/utils/generateCode");
const MODULE_NAME = "expo-gradle-ext-vars";
const androidPlugin = (config, props) => {
    return (0, config_plugins_1.withProjectBuildGradle)(config, ({ modResults, ...subConfig }) => {
        if (modResults.language !== 'groovy') {
            config_plugins_1.WarningAggregator.addWarningAndroid('withExpoGradleExtVars', `Cannot automatically configure project build.gradle if it's not groovy`);
            return { modResults, ...subConfig };
        }
        modResults.contents = applyExtVars(modResults.contents, props);
        return { modResults, ...subConfig };
    });
};
const withExpoGradleExtVars = (config, _props) => {
    const props = _props || {};
    return (0, config_plugins_1.withPlugins)(config, [
        [androidPlugin, new Map(Object.entries(props))],
    ]);
};
const applyExtVars = (buildGradle, props) => {
    const newSrc = [];
    console.log('[ ' + MODULE_NAME + '] applying ext vars to android/build.gradle', props);
    for (let [key, value] of props) {
        if (typeof (value) === 'boolean') {
            newSrc.push(`\t${key} = ${value}`);
        }
        else {
            newSrc.push(`\t${key} = "${value}"`);
        }
    }
    return (0, generateCode_1.mergeContents)({
        tag: `${MODULE_NAME}`,
        src: buildGradle,
        newSrc: newSrc.join("\n"),
        anchor: /ext(?:\s+)?\{/,
        offset: 1,
        comment: "//",
    }).contents;
};
exports.default = withExpoGradleExtVars;
//# sourceMappingURL=index.js.map